description = 'Module :: Rio Test Infrastructure'
dependencies {
    compile project(':rio-lib')
    compile project(':rio-test')
    compile project(':rio-logging-support')
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: "${groovyVersion}"
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testCompile group: 'junit', name: 'junit', version: "${junitVersion}"
    testRuntime group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    testRuntime "org.slf4j:jul-to-slf4j:$slf4jVersion"
    //testCompile group: 'org.apache.river', name: 'outrigger-dl', version: "${riverVersion}"
    //testCompile group: 'org.apache.river', name: 'outrigger', version: "${riverVersion}"
    compile files("${System.properties['java.home']}/../lib/tools.jar")
}

sourceSets {
    test {
        java { srcDirs = [] }
        groovy { srcDirs += ['src/test/java'] }
    }
}
test {
    dependsOn([":distribution:createDistribution",
               ":cybernode-proxy:publishToMavenLocal",
               ":monitor-proxy:publishToMavenLocal"])
    systemProperty 'java.security.policy', policyAll
    systemProperty "rio.home", "${project(":distribution").buildDir.path}/rio-${version}"
    systemProperty "rio.test.home", "${projectDir.path}"
    systemProperty "org.rioproject.test.manager.config", "${projectDir.path}/src/test/conf/manager-config.groovy"
    systemProperty "org.rioproject.test.config", "${projectDir.path}/src/test/conf/test-config.groovy"

    testLogging {
        events "passed", "skipped", "failed"/*, "standardOut", "standardError"*/
    }
}