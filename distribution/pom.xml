<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>main</artifactId>
        <groupId>org.rioproject</groupId>
        <version>5.6.6</version>
    </parent>
    <artifactId>distribution</artifactId>
    <name>Rio Distribution</name>
    <packaging>pom</packaging>

    <dependencies>
       
        <dependency>
            <groupId>${project.groupId}.resolver</groupId>
            <artifactId>resolver-project</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-start</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-lib</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-api</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>watch-ui</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-cli</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-ui</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rio-test</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>webster</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.cybernode</groupId>
            <artifactId>cybernode-proxy</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.cybernode</groupId>
            <artifactId>cybernode-service</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.cybernode</groupId>
            <artifactId>cybernode-ui</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.monitor</groupId>
            <artifactId>monitor-proxy</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.monitor</groupId>
            <artifactId>monitor-service</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.event-collector</groupId>
            <artifactId>event-collector-api</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.event-collector</groupId>
            <artifactId>event-collector-proxy</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}.event-collector</groupId>
            <artifactId>event-collector-service</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>au.net.zeus.jgdms.reggie</groupId>
            <artifactId>reggie-service</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>au.net.zeus.jgdms.reggie</groupId>
            <artifactId>reggie-dl</artifactId>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>org.hyperic</groupId>
            <artifactId>sigar-dist</artifactId>
            <type>zip</type>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                    <finalName>rio-${project.version}</finalName>
                    <appendAssemblyId>true</appendAssemblyId>
                    <ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
            Create a distribution marker file simply for module poms to check for existence.
            This avoids trying to check for the distribution, since the distribution's
            directory name is tied to the version. Since we cannot have local pom
            properties interpolated for a <file> <exists/> profile check, we simply create
            a marker file and check for that. This will allow modules to determine if integration
            tests can be run
            -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>create-marker</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <touch file="${basedir}/target/rio.dist"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    
    <properties>
        <staging.dir>${project.build.directory}/staging</staging.dir>
        <izpack-release>4.3.2</izpack-release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>release</id>
            <dependencies>
                <!-- IzPack dependencies -->
                <dependency>
                    <groupId>org.codehaus.izpack</groupId>
                    <artifactId>izpack-standalone-compiler</artifactId>
                    <version>${izpack-release}</version>
                </dependency>
                
            </dependencies>
            <build>
                <plugins>
                    <!--  copy other checked resource into staging area, expected by src/izpack/install.xml -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.3</version>
                        <executions>
                            <execution>
                                <id>create-staging-area</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!-- Setup installer -->
                                        <copy todir="${staging.dir}/izpack">
                                            <fileset dir="${basedir}/src/izpack"/>
                                            <filterset>
                                                <filter token="VERSION" value="${project.version}"/>
                                            </filterset>
                                        </copy>

                                        <!-- Package examples -->
                                        <exec executable="mvn" dir="${basedir}/../examples/">
                                            <arg value="clean"/>
                                            <arg value="-q"/>
                                        </exec>
                                        <mkdir dir="${staging.dir}/examples"/>
                                        <zip destfile="${staging.dir}/examples/examples.zip">
                                            <zipfileset dir="${basedir}/../examples/" prefix="examples">
                                                <exclude name="**/*.iml"/>
                                                <exclude name="**/api*.iml"/>
                                                <exclude name="**/service*.iml"/>
                                                <exclude name="**/ui*.iml"/>
                                                <exclude name="**/rule*.iml"/>
                                                <exclude name="**/proxy.iml"/>
                                                <exclude name="**/calculator.iml"/>
                                                <exclude name="**/events.iml"/>
                                                <exclude name="**/hospital.iml"/>
                                                <exclude name="**/springbean.iml"/>
                                                <exclude name="**/tomcat.iml"/>
                                                <exclude name="**/workflow.iml"/>
                                            </zipfileset>
                                        </zip>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>zip-release</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!-- Zip up the release  -->
                                        <property name="release.archive" value="rio-${project.version}"/>
                                        <property name="dist.version" value="${project.version}"/>
                                        <ant antfile="${basedir}/ziprelease.xml" target="release"/>                                                                                
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.izpack</groupId>
                        <artifactId>izpack-maven-plugin</artifactId>
                        <version>1.0-alpha-5</version>
                        <configuration>
                            <izpackBasedir>${staging.dir}/izpack</izpackBasedir>
                            <customPanelDirectory>${staging.dir}/izpack</customPanelDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>izpack</goal>
                                </goals>
                                <configuration>
                                    <!--<izpackBasedir>${staging.dir}/izpack</izpackBasedir>
                                    <customPanelDirectory>${staging.dir}/izpack</customPanelDirectory>-->
                                    <installerFile>${project.build.directory}/rio-${project.version}-installer.jar</installerFile>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.izpack</groupId>
                                <artifactId>izpack-standalone-compiler</artifactId>
                                <version>${izpack-release}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-docs-available</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>../docs/index.html</file>
                                            </files>
                                            <message>You must build the site by running "mvn site" from the root of the project.</message>
                                        </requireFilesExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.3</version>
                        <executions>                            
                            <execution>
                                <id>zip-release</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!-- Zip up the release  -->
                                        <property name="release.archive" value="distribution-${project.version}"/>
                                        <property name="dist.version" value="${project.version}"/>
                                        <ant antfile="${basedir}/ziprelease.xml" target="release"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/${project.build.finalName}.zip</file>
                                            <type>zip</type>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
            </plugins>
            </build>
        </profile>
	</profiles>

</project>
